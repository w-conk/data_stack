export const evidenceInclude: true;
/** @typedef {typeof __propDef.props}  BoxPlotProps */
/** @typedef {typeof __propDef.events}  BoxPlotEvents */
/** @typedef {typeof __propDef.slots}  BoxPlotSlots */
export default class BoxPlot extends SvelteComponent<{
    title?: any;
    data?: any;
    name?: any;
    color?: any;
    legend?: any;
    min?: any;
    max?: any;
    emptySet?: any;
    emptyMessage?: any;
    echartsOptions?: any;
    seriesOptions?: any;
    seriesColors?: any;
    renderer?: any;
    connectGroup?: any;
    printEchartsConfig?: boolean;
    series?: any;
    swapXY?: boolean;
    subtitle?: any;
    xType?: any;
    xAxisTitle?: any;
    xBaseline?: any;
    xTickMarks?: any;
    xGridlines?: any;
    xAxisLabels?: any;
    xFmt?: any;
    yLog?: any;
    yLogBase?: any;
    yAxisTitle?: any;
    yBaseline?: any;
    yTickMarks?: any;
    yGridlines?: any;
    yAxisLabels?: any;
    yMin?: any;
    yMax?: any;
    yFmt?: any;
    intervalBottom?: any;
    intervalTop?: any;
    midpoint?: any;
    confidenceInterval?: any;
}, {
    [evt: string]: CustomEvent<any>;
}, {
    default: {};
}> {
}
export type BoxPlotProps = typeof __propDef.props;
export type BoxPlotEvents = typeof __propDef.events;
export type BoxPlotSlots = typeof __propDef.slots;
import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: {
        title?: any;
        data?: any;
        name?: any;
        color?: any;
        legend?: any;
        min?: any;
        max?: any;
        emptySet?: any;
        emptyMessage?: any;
        echartsOptions?: any;
        seriesOptions?: any;
        seriesColors?: any;
        renderer?: any;
        connectGroup?: any;
        printEchartsConfig?: boolean;
        series?: any;
        swapXY?: boolean;
        subtitle?: any;
        xType?: any;
        xAxisTitle?: any;
        xBaseline?: any;
        xTickMarks?: any;
        xGridlines?: any;
        xAxisLabels?: any;
        xFmt?: any;
        yLog?: any;
        yLogBase?: any;
        yAxisTitle?: any;
        yBaseline?: any;
        yTickMarks?: any;
        yGridlines?: any;
        yAxisLabels?: any;
        yMin?: any;
        yMax?: any;
        yFmt?: any;
        intervalBottom?: any;
        intervalTop?: any;
        midpoint?: any;
        confidenceInterval?: any;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export {};
