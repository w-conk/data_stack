import { SvelteComponent } from "svelte";
import type { DialogProps } from '../types.js';
import type { Transition } from '../../internal/types.js';
declare class __sveltets_Render<ContentT extends Transition, ContentIn extends Transition, ContentOut extends Transition, OverlayT extends Transition, OverlayIn extends Transition, OverlayOut extends Transition> {
    props(): DialogProps<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>;
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {};
    };
}
export type CommandDialogProps<ContentT extends Transition, ContentIn extends Transition, ContentOut extends Transition, OverlayT extends Transition, OverlayIn extends Transition, OverlayOut extends Transition> = ReturnType<__sveltets_Render<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>['props']>;
export type CommandDialogEvents<ContentT extends Transition, ContentIn extends Transition, ContentOut extends Transition, OverlayT extends Transition, OverlayIn extends Transition, OverlayOut extends Transition> = ReturnType<__sveltets_Render<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>['events']>;
export type CommandDialogSlots<ContentT extends Transition, ContentIn extends Transition, ContentOut extends Transition, OverlayT extends Transition, OverlayIn extends Transition, OverlayOut extends Transition> = ReturnType<__sveltets_Render<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>['slots']>;
export default class CommandDialog<ContentT extends Transition, ContentIn extends Transition, ContentOut extends Transition, OverlayT extends Transition, OverlayIn extends Transition, OverlayOut extends Transition> extends SvelteComponent<CommandDialogProps<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>, CommandDialogEvents<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>, CommandDialogSlots<ContentT, ContentIn, ContentOut, OverlayT, OverlayIn, OverlayOut>> {
}
export {};
