import { isFunction, isHTMLElement, sleep } from './index.js';
export function handleFocus(args) {
    const { prop, defaultEl } = args;
    sleep(1).then(() => {
        if (prop === undefined) {
            defaultEl?.focus();
            return;
        }
        const returned = isFunction(prop) ? prop(defaultEl) : prop;
        if (typeof returned === 'string') {
            // Get el by selector, focus it
            const el = document.querySelector(returned);
            if (!isHTMLElement(el))
                return;
            el.focus();
        }
        else if (isHTMLElement(returned)) {
            // Focus it
            returned.focus();
        }
    });
}
